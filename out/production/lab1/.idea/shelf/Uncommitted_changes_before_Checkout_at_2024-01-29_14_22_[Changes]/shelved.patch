Index: VolvoWorkshop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\r\n\r\npublic class VolvoWorkshop implements iCarWorkshop<Volvo240> {\r\n    private final int maxCars = 5;\r\n    private final ArrayList<Volvo240> carsInService = new ArrayList<>(maxCars);\r\n\r\n    @Override\r\n    public void takeInCar(Volvo240 car) {\r\n        if (carsInService.size() < 5) {\r\n            if (car instanceof Volvo240) {\r\n                carsInService.add(car);\r\n            } else throw new IllegalArgumentException(\"Wrong car\");\r\n        } throw new IllegalArgumentException(\"Workshop is full\");\r\n    }\r\n\r\n    @Override\r\n    public Volvo240 returnCar(int carID) {\r\n        for (int i = 0; i < carsInService.size(); i++) {\r\n            if (carsInService.get(i).carID == carID) {\r\n                return carsInService.get(i);\r\n            }\r\n        } throw new IllegalArgumentException(\"No car found with given carID\");\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/VolvoWorkshop.java b/VolvoWorkshop.java
--- a/VolvoWorkshop.java	(revision 1ad93e7c1184657b6c50797192829971b24259e8)
+++ b/VolvoWorkshop.java	(date 1706290969405)
@@ -1,25 +1,30 @@
 import java.util.ArrayList;
+import java.util.List;
 
 public class VolvoWorkshop implements iCarWorkshop<Volvo240> {
     private final int maxCars = 5;
-    private final ArrayList<Volvo240> carsInService = new ArrayList<>(maxCars);
+    private final List<Volvo240> carsInService = new ArrayList<>(maxCars);
 
     @Override
     public void takeInCar(Volvo240 car) {
-        if (carsInService.size() < 5) {
+        if (carsInService.size() < maxCars) {
             if (car instanceof Volvo240) {
                 carsInService.add(car);
-            } else throw new IllegalArgumentException("Wrong car");
-        } throw new IllegalArgumentException("Workshop is full");
+            } else {
+                throw new IllegalArgumentException("Wrong car");
+            }
+        } else {
+            throw new IllegalArgumentException("Workshop is full");
+        }
     }
 
     @Override
-    public Volvo240 returnCar(int carID) {
+    public Volvo240 returnCar(String ModelName) {
         for (int i = 0; i < carsInService.size(); i++) {
-            if (carsInService.get(i).carID == carID) {
+            if (carsInService.get(i).getModelName().equals(ModelName)) {
                 return carsInService.get(i);
             }
-        } throw new IllegalArgumentException("No car found with given carID");
+        } throw new IllegalArgumentException("No car found with given modelName");
     }
 
 
Index: Test/CartransporterTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import org.junit.jupiter.api.BeforeAll;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport java.awt.*;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\n\r\nclass CartransporterTest {\r\n\r\n\r\n\r\n    @Test\r\n    void addCar() {\r\n        Cartransporter t = new Cartransporter();\r\n        Volvo240 v = new Volvo240();\r\n        v.setPosition(new Point(0,0));\r\n        t.setPosition(new Point(0,0));\r\n        Saab95 s = new Saab95();\r\n        s.setPosition(new Point(0,0));\r\n        t.setRampDown(true);\r\n        t.addCar(v);\r\n        t.addCar(s);\r\n        try\r\n        {\r\n            assertTrue(t.loadedCars.size() == 2);\r\n            assertEquals(t.findCar(v.getModelName()), v);\r\n            assertEquals(t.findCar(s.getModelName()), s);\r\n        } catch (IllegalArgumentException ignored)\r\n        {\r\n            assertTrue(false);\r\n\r\n        }\r\n\r\n        try{\r\n            for (int i = 0; i < 10; i++) {\r\n               t.addCar(s);\r\n            }\r\n            assertTrue(false);\r\n\r\n        }catch (IllegalArgumentException ignored){\r\n            assertTrue(true);\r\n        }\r\n        try\r\n        {\r\n            Scania sc = new Scania();\r\n            t.addCar(sc);\r\n            assertTrue(false);\r\n\r\n        }catch (IllegalArgumentException ignored)\r\n        {\r\n            assertTrue(true);\r\n        }\r\n        try\r\n        {\r\n            Cartransporter ct = new Cartransporter();\r\n            t.addCar(ct);\r\n            assertTrue(false);\r\n        }catch (IllegalArgumentException ignored)\r\n        {\r\n            assertTrue(true);\r\n        }\r\n    }\r\n\r\n    @Test\r\n    void findCar() {\r\n        Cartransporter t = new Cartransporter();\r\n        Volvo240 v = new Volvo240();\r\n        Saab95 s = new Saab95();\r\n        t.setRampDown(true);\r\n\r\n        t.addCar(v);\r\n        t.addCar(s);\r\n\r\n        assertEquals(t.findCar(v.getModelName()), v);\r\n        assertEquals(t.findCar(s.getModelName()), s);\r\n\r\n        t.removeCar(v);\r\n        t.removeCar(s);\r\n        try {\r\n            t.findCar(v.getModelName());\r\n            t.findCar(s.getModelName());\r\n        } catch (IllegalArgumentException ignored)\r\n        {\r\n            assertTrue(true);\r\n        }\r\n    }\r\n\r\n    @Test\r\n    void samePosition () {\r\n        Cartransporter t = new Cartransporter();\r\n        Volvo240 v = new Volvo240();\r\n        t.setRampDown(true);\r\n        v.setPosition(new Point(96,200));\r\n        t.setPosition(new Point(100,200));\r\n        v.transporter(t);\r\n        t.addCar(v);\r\n\r\n        Point x = t.getPosition();\r\n        Point y = v.getPosition();\r\n        assertEquals(x, y);\r\n\r\n        t.removeCar(v);\r\n        System.out.println(v.getPosition());\r\n\r\n    }\r\n\r\n    @Test\r\n    void removeCar() {\r\n        Cartransporter t = new Cartransporter();\r\n        Volvo240 v = new Volvo240();\r\n        Saab95 s = new Saab95();\r\n        t.setRampDown(true);\r\n\r\n        t.addCar(v);\r\n        t.addCar(s);\r\n        t.removeCar(v);\r\n        t.removeCar(s);\r\n\r\n        assertTrue(t.loadedCars.size() == 0);\r\n        assertTrue(t.inRange(v.getPosition()));\r\n        assertTrue(t.inRange(s.getPosition()));\r\n    }\r\n\r\n\r\n    @Test\r\n    void inRange() {\r\n        Cartransporter t = new Cartransporter();\r\n        Volvo240 v = new Volvo240();\r\n        t.setRampDown(true);\r\n\r\n        t.setPosition(new Point(0,0));\r\n        v.setPosition(new Point(0,0));\r\n\r\n        assertTrue(t.inRange(v.getPosition()));\r\n        v.setPosition(new Point(t.getPosition().x+t.inRangeUnit * 2,t.getPosition().x+t.inRangeUnit * 2));\r\n        assertFalse(t.inRange(v.getPosition()));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Test/CartransporterTest.java b/Test/CartransporterTest.java
--- a/Test/CartransporterTest.java	(revision 1ad93e7c1184657b6c50797192829971b24259e8)
+++ b/Test/CartransporterTest.java	(date 1706280626949)
@@ -23,12 +23,11 @@
         try
         {
             assertTrue(t.loadedCars.size() == 2);
-            assertEquals(t.findCar(v.getModelName()), v);
-            assertEquals(t.findCar(s.getModelName()), s);
+            assertEquals(t.findAndRemoveCar(v.getModelName()), v);
+            assertEquals(t.findAndRemoveCar(s.getModelName()), s);
         } catch (IllegalArgumentException ignored)
         {
             assertTrue(false);
-
         }
 
         try{
@@ -62,7 +61,7 @@
     }
 
     @Test
-    void findCar() {
+    void findAndRemoveCar() {
         Cartransporter t = new Cartransporter();
         Volvo240 v = new Volvo240();
         Saab95 s = new Saab95();
@@ -71,16 +70,14 @@
         t.addCar(v);
         t.addCar(s);
 
-        assertEquals(t.findCar(v.getModelName()), v);
-        assertEquals(t.findCar(s.getModelName()), s);
+        assertEquals(t.findAndRemoveCar(v.getModelName()), v);
+        assertEquals(t.findAndRemoveCar(s.getModelName()), s);
 
-        t.removeCar(v);
-        t.removeCar(s);
+
         try {
-            t.findCar(v.getModelName());
-            t.findCar(s.getModelName());
-        } catch (IllegalArgumentException ignored)
-        {
+            t.findAndRemoveCar(v.getModelName());
+            t.findAndRemoveCar(s.getModelName());
+        } catch (IllegalArgumentException ignored) {
             assertTrue(true);
         }
     }
@@ -99,7 +96,7 @@
         Point y = v.getPosition();
         assertEquals(x, y);
 
-        t.removeCar(v);
+        t.findAndRemoveCar(v.getModelName());
         System.out.println(v.getPosition());
 
     }
@@ -113,8 +110,8 @@
 
         t.addCar(v);
         t.addCar(s);
-        t.removeCar(v);
-        t.removeCar(s);
+        t.removeLastCar(v);
+        t.removeLastCar(s);
 
         assertTrue(t.loadedCars.size() == 0);
         assertTrue(t.inRange(v.getPosition()));
Index: Scania.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.awt.*;\r\npublic class Scania extends Car implements iTruckBed{\r\n    private final static int lowestBedAngle = 0;\r\n    private final static int highestBedAngle = 70;\r\n    private int bedAngle;\r\n\r\n    public Scania() {\r\n        super(2, 125, Color.BLUE, \"Scania\", 3.6, 102);\r\n        setBedAngle(lowestBedAngle);\r\n    }\r\n\r\n\r\n    private void setBedAngle(int angle) {\r\n        if (this.getCurrentSpeed() == 0 && isBedAngleValid(angle))\r\n            this.bedAngle = angle;\r\n    }\r\n\r\n\r\n    public double speedFactor() {\r\n        return enginePower * 0.01;\r\n    }\r\n\r\n\r\n    public void gas(double amount) {\r\n        if(this.bedAngle == lowestBedAngle) {\r\n            super.gas(amount);\r\n        }\r\n    }\r\n\r\n\r\n    public int getBedAngle() {\r\n        return this.bedAngle;\r\n    }\r\n\r\n    public void higherBed() {\r\n        int newAngle = this.getBedAngle() + 1;\r\n        if (newAngle <= highestBedAngle) {\r\n            this.setBedAngle(newAngle);\r\n        }\r\n    }\r\n\r\n    public void lowerBed() {\r\n        int newAngle = this.getBedAngle() - 1;\r\n        if (newAngle >= lowestBedAngle) {\r\n            this.setBedAngle(newAngle);\r\n        }\r\n    }\r\n\r\n    private boolean isBedAngleValid(int angle) {\r\n        return angle >= lowestBedAngle && angle <= highestBedAngle;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Scania.java b/Scania.java
--- a/Scania.java	(revision 1ad93e7c1184657b6c50797192829971b24259e8)
+++ b/Scania.java	(date 1706283087314)
@@ -1,11 +1,11 @@
 import java.awt.*;
-public class Scania extends Car implements iTruckBed{
+public class Scania extends Car{
     private final static int lowestBedAngle = 0;
     private final static int highestBedAngle = 70;
     private int bedAngle;
 
     public Scania() {
-        super(2, 125, Color.BLUE, "Scania", 3.6, 102);
+        super(2, 125, Color.BLUE, "Scania", 3.6);
         setBedAngle(lowestBedAngle);
     }
 
@@ -21,6 +21,7 @@
     }
 
 
+    @Override
     public void gas(double amount) {
         if(this.bedAngle == lowestBedAngle) {
             super.gas(amount);
Index: AnyCarWorkshop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.*;\r\n\r\npublic class AnyCarWorkshop<C extends Car> implements iCarWorkshop<C> {\r\n    private final int maxCars = 10;\r\n    private final ArrayList<C> carsInService = new ArrayList<>(maxCars);\r\n\r\n\r\n    @Override\r\n    public void takeInCar(C car) {\r\n        if (carsInService.size() < 10) {\r\n            carsInService.add(car);\r\n        } else throw new IllegalArgumentException(\"Workshop is full\");\r\n    }\r\n\r\n\r\n    @Override\r\n    public C returnCar(int carID) {\r\n        for (int i = 0; i < carsInService.size(); i++) {\r\n            if (carsInService.get(i).carID == carID) {\r\n                return carsInService.get(i);\r\n            }\r\n        } throw new IllegalArgumentException(\"No car found with given carID\");\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/AnyCarWorkshop.java b/AnyCarWorkshop.java
--- a/AnyCarWorkshop.java	(revision 1ad93e7c1184657b6c50797192829971b24259e8)
+++ b/AnyCarWorkshop.java	(date 1706283628243)
@@ -2,24 +2,24 @@
 
 public class AnyCarWorkshop<C extends Car> implements iCarWorkshop<C> {
     private final int maxCars = 10;
-    private final ArrayList<C> carsInService = new ArrayList<>(maxCars);
+    private ArrayList<C> carsInService = new ArrayList<>(maxCars);
 
 
     @Override
     public void takeInCar(C car) {
-        if (carsInService.size() < 10) {
+        if (carsInService.size() < maxCars) {
             carsInService.add(car);
         } else throw new IllegalArgumentException("Workshop is full");
     }
 
 
     @Override
-    public C returnCar(int carID) {
+    public C returnCar(String ModelName) {
         for (int i = 0; i < carsInService.size(); i++) {
-            if (carsInService.get(i).carID == carID) {
+            if (carsInService.get(i).getModelName().equals(ModelName)) {
                 return carsInService.get(i);
             }
-        } throw new IllegalArgumentException("No car found with given carID");
+        } throw new IllegalArgumentException("No car found with given modelName");
     }
 
 
Index: Cartransporter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.awt.*;\r\nimport java.util.Stack;\r\n\r\n\r\npublic class Cartransporter extends Car implements iTruckBed{\r\n    protected Stack<Car> loadedCars = new Stack<>();\r\n    private Car car;\r\n    private boolean carConnected;\r\n    private boolean rampDown;\r\n    protected final int inRangeUnit = 5;\r\n    private final int maxLoadedCars = 5;\r\n    private final double maxWeightPerCar = 2.5;\r\n\r\n    public Cartransporter() {\r\n        super(2, 125, Color.RED, \"TruckTransportingCars\", 5.7, 104);\r\n    }\r\n\r\n    public double speedFactor() {\r\n        return enginePower * 0.01;\r\n    }\r\n\r\n    public void gas(double amount) { // only gas if ramp is up\r\n        if(!this.rampDown) {\r\n            super.gas(amount);\r\n        }\r\n    }\r\n\r\n    public void addCar(Car c) {\r\n        if(!rampDown || !inRange(c.getPosition())) {\r\n            throw new IllegalArgumentException(\"cant add car if ramp not lowered or car not in range\");\r\n        } if (c instanceof Cartransporter) {\r\n            throw new IllegalArgumentException(\"cant add a car transporter\");\r\n        } if (loadedCars.size() >= maxLoadedCars) {\r\n            throw new IllegalArgumentException(\"Cant add car. Transporter is full.\");\r\n        } if (c.weight > maxWeightPerCar) {\r\n            throw new IllegalArgumentException(\"Car is too heavy\");\r\n        }\r\n        c.transporter(this);\r\n        loadedCars.push(c);\r\n    }\r\n\r\n    public Car findCar(String ModelName) {\r\n        int size = loadedCars.size();\r\n\r\n        for (int i = 0; i < size; i++) {\r\n          if (loadedCars.get(i).getModelName().equals(ModelName)) {\r\n              return loadedCars.get(i);\r\n          }\r\n        }\r\n        throw new IllegalArgumentException(\"car dosen't exists in ramp\");\r\n    }\r\n\r\n    public void removeCar(Car c) {\r\n        if(!rampDown) {\r\n            throw new IllegalArgumentException(\"cant add car if ramp not lowered\");\r\n        }\r\n\r\n        Stack<Car> carpoped = new Stack<>();\r\n        int size = loadedCars.size();\r\n\r\n        for (int i = 0; i < size; i++) {\r\n          Car pop = loadedCars.pop();\r\n          if (pop.equals(c)) {\r\n              pop.setPosition(new Point(getPosition().x + inRangeUnit/2, getPosition().y + inRangeUnit/2));\r\n              pop.transporter(null);\r\n              break;\r\n          }\r\n          carpoped.push(pop);\r\n        }\r\n        for (int i = 0; i < carpoped.size(); i++) {\r\n            loadedCars.push(carpoped.pop());\r\n        }\r\n    }\r\n\r\n\r\n    public void setRampDown(boolean b) {\r\n        if (this.getCurrentSpeed() == 0) {\r\n            this.rampDown = b;\r\n        }\r\n    }\r\n\r\n    public boolean getRampDown() {\r\n        return this.rampDown;\r\n    }\r\n\r\n\r\n\r\n    public boolean inRange(Point p) {\r\n            return Math.abs(p.x - getPosition().x) < inRangeUnit &&  Math.abs(p.y - getPosition().y) < inRangeUnit;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Cartransporter.java b/Cartransporter.java
--- a/Cartransporter.java	(revision 1ad93e7c1184657b6c50797192829971b24259e8)
+++ b/Cartransporter.java	(date 1706283087348)
@@ -4,9 +4,9 @@
 import java.util.Stack;
 
 
-public class Cartransporter extends Car implements iTruckBed{
-    protected Stack<Car> loadedCars = new Stack<>();
-    private Car car;
+public class Cartransporter extends Car {
+    protected ArrayList<Car> loadedCars = new ArrayList<>();
+    //private Car car;
     private boolean carConnected;
     private boolean rampDown;
     protected final int inRangeUnit = 5;
@@ -20,7 +20,7 @@
     public double speedFactor() {
         return enginePower * 0.01;
     }
-
+    @Override
     public void gas(double amount) { // only gas if ramp is up
         if(!this.rampDown) {
             super.gas(amount);
@@ -38,25 +38,37 @@
             throw new IllegalArgumentException("Car is too heavy");
         }
         c.transporter(this);
-        loadedCars.push(c);
+        loadedCars.add(c);
     }
 
-    public Car findCar(String ModelName) {
+    public Car findAndRemoveCar(String ModelName) {
         int size = loadedCars.size();
 
         for (int i = 0; i < size; i++) {
           if (loadedCars.get(i).getModelName().equals(ModelName)) {
-              return loadedCars.get(i);
+              Car ca = loadedCars.get(i);
+              ca.setPosition(new Point(getPosition().x + inRangeUnit/2, getPosition().y + inRangeUnit/2));
+              ca.transporter(null);
+              return loadedCars.remove(i);
           }
         }
         throw new IllegalArgumentException("car dosen't exists in ramp");
     }
 
-    public void removeCar(Car c) {
-        if(!rampDown) {
+    public void removeLastCar(Car c) {
+        if (!rampDown) {
             throw new IllegalArgumentException("cant add car if ramp not lowered");
         }
 
+        int i = loadedCars.size()-1;
+        Car ca = loadedCars.get(i);
+        ca.setPosition(new Point(getPosition().x + inRangeUnit/2, getPosition().y + inRangeUnit/2));
+        ca.transporter(null);
+        loadedCars.remove(i);
+
+    }
+/*
+
         Stack<Car> carpoped = new Stack<>();
         int size = loadedCars.size();
 
@@ -73,6 +85,7 @@
             loadedCars.push(carpoped.pop());
         }
     }
+*/
 
 
     public void setRampDown(boolean b) {
Index: VolvoWorkshop1.java
===================================================================
diff --git a/VolvoWorkshop1.java b/VolvoWorkshop1.java
deleted file mode 100644
--- a/VolvoWorkshop1.java	(revision 1ad93e7c1184657b6c50797192829971b24259e8)
+++ /dev/null	(revision 1ad93e7c1184657b6c50797192829971b24259e8)
@@ -1,27 +0,0 @@
-import java.util.ArrayList;
-
-public class VolvoWorkshop1 implements iCarWorkshop1{
-    private final int maxCars = 5;
-    private final ArrayList<Car> carsInService = new ArrayList<>(maxCars);
-
-
-    @Override
-    public void takeInCar(Car car) {
-        if (carsInService.size() < 5) {
-            if (car instanceof Volvo240) {
-                carsInService.add(car);
-            } else throw new IllegalArgumentException("Wrong car");
-        } throw new IllegalArgumentException("Workshop is full");
-    }
-
-    @Override
-    public Volvo240 returnCar(int carID) {
-        for (int i = 0; i < carsInService.size(); i++) {
-            if (carsInService.get(i).carID == carID) {
-                return (Volvo240) carsInService.get(i);
-            }
-        } throw new IllegalArgumentException("No car found with given carID");
-    }
-
-
-}
Index: AnyCarWorkshop1.java
===================================================================
diff --git a/AnyCarWorkshop1.java b/AnyCarWorkshop1.java
deleted file mode 100644
--- a/AnyCarWorkshop1.java	(revision 1ad93e7c1184657b6c50797192829971b24259e8)
+++ /dev/null	(revision 1ad93e7c1184657b6c50797192829971b24259e8)
@@ -1,27 +0,0 @@
-import java.util.ArrayList;
-
-public class AnyCarWorkshop1 implements iCarWorkshop1{
-    private final int maxCars = 10;
-    private final ArrayList<Car> carsInService = new ArrayList<>(maxCars);
-
-
-    @Override
-    public void takeInCar(Car car) {
-        if (carsInService.size() < 5) {
-            carsInService.add(car);
-        } else throw new IllegalArgumentException("Workshop is full");
-    }
-
-
-    @Override
-    public Car returnCar(int carID) {
-        for (int i = 0; i < carsInService.size(); i++) {
-            if (carsInService.get(i).carID == carID) {
-                return carsInService.get(i);
-            }
-        } throw new IllegalArgumentException("No car found with given carID");
-    }
-
-
-
-}
Index: iTruckBed.java
===================================================================
diff --git a/iTruckBed.java b/iTruckBed.java
deleted file mode 100644
--- a/iTruckBed.java	(revision 1ad93e7c1184657b6c50797192829971b24259e8)
+++ /dev/null	(revision 1ad93e7c1184657b6c50797192829971b24259e8)
@@ -1,4 +0,0 @@
-public interface iTruckBed {
-    void gas(double amount);
-
-}
Index: iCarWorkshop1.java
===================================================================
diff --git a/iCarWorkshop1.java b/iCarWorkshop1.java
deleted file mode 100644
--- a/iCarWorkshop1.java	(revision 1ad93e7c1184657b6c50797192829971b24259e8)
+++ /dev/null	(revision 1ad93e7c1184657b6c50797192829971b24259e8)
@@ -1,4 +0,0 @@
-public interface iCarWorkshop1 {
-    void takeInCar(Car car);
-    Car returnCar(int carID);
-}
Index: Test/VolvoWorkshopTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Test/VolvoWorkshopTest.java b/Test/VolvoWorkshopTest.java
new file mode 100644
--- /dev/null	(date 1706283682371)
+++ b/Test/VolvoWorkshopTest.java	(date 1706283682371)
@@ -0,0 +1,38 @@
+import org.junit.jupiter.api.Test;
+
+import java.util.ArrayList;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+class VolvoWorkshopTest {
+    public final int maxCars = 5;
+    ArrayList<Volvo240> carsInService = new ArrayList<>(maxCars);
+
+    @Test
+    void workshopIsFullTryToAdd() {
+        Volvo240 volvo = new Volvo240();
+        carsInService.add(volvo);
+        carsInService.add(volvo);
+        carsInService.add(volvo);
+        carsInService.add(volvo);
+
+        try {
+            carsInService.add(volvo);
+        }catch (IllegalArgumentException ignored) {
+        assertTrue(true);
+        }
+
+
+    }
+
+    @Test
+    void returnCarAndCarIsVolvo() {
+        Volvo240 volvo = new Volvo240();
+        VolvoWorkshop v = new VolvoWorkshop();
+        v.takeInCar(volvo);
+        assertTrue(v.returnCar(volvo.getModelName()) instanceof Volvo240);
+
+
+    }
+
+}
\ No newline at end of file
Index: Test/AnyCarWorkshopTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Test/AnyCarWorkshopTest.java b/Test/AnyCarWorkshopTest.java
new file mode 100644
--- /dev/null	(date 1706282397575)
+++ b/Test/AnyCarWorkshopTest.java	(date 1706282397575)
@@ -0,0 +1,15 @@
+import org.junit.jupiter.api.Test;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+class AnyCarWorkshopTest {
+
+    @Test
+    void takeInCar() {
+
+    }
+
+    @Test
+    void returnCar() {
+    }
+}
\ No newline at end of file
Index: out/production/lab1/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"927e760e-ee34-431f-8247-380566780540\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/Test/CarTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Test/CarTest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/lab1.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/lab1.iml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CoverageOptionsProvider\">\r\n    <option name=\"myAddOrReplace\" value=\"0\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JUnit5 Test Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"6ba6584d-698f-43db-b3b0-ce2d4216ea5e\" />\r\n        <option name=\"url\" value=\"https://github.com/Daskaromkilde/lab1.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2bH0nbr9fsXPYoib3RMpiv68WVl\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Downloaded.Files.Path.Enabled\": \"false\",\r\n    \"JUnit.CarTest.executor\": \"Coverage\",\r\n    \"Repository.Attach.Annotations\": \"false\",\r\n    \"Repository.Attach.JavaDocs\": \"false\",\r\n    \"Repository.Attach.Sources\": \"false\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary\": \"JUnit5\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5\": \"\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"jdk.selected.JAVA_MODULE\": \"corretto-17\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Libraries\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"labb1\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Tox\" factoryName=\"Tox\">\r\n      <module name=\"labb1\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-21.0.1-corretto-21.0.1-f644763e9732-eed86825\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"927e760e-ee34-431f-8247-380566780540\" name=\"Changes\" comment=\"\" />\r\n      <created>1705856865194</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1705856865194</updated>\r\n      <workItem from=\"1706024595882\" duration=\"15000\" />\r\n      <workItem from=\"1706024614460\" duration=\"1480000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/labb1$CarTest.ic\" NAME=\"CarTest Coverage Results\" MODIFIED=\"1706025652608\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/lab1/.idea/workspace.xml b/out/production/lab1/.idea/workspace.xml
--- a/out/production/lab1/.idea/workspace.xml	(revision 1ad93e7c1184657b6c50797192829971b24259e8)
+++ b/out/production/lab1/.idea/workspace.xml	(date 1706280627186)
@@ -4,147 +4,258 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="927e760e-ee34-431f-8247-380566780540" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/Test/CarTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Test/CarTest.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/lab1.iml" beforeDir="false" afterPath="$PROJECT_DIR$/lab1.iml" afterDir="false" />
+    <list default="true" id="4e3097a4-7052-494d-8302-f41f496d44d7" name="Changes" comment="Skapat car class. Extendat saab&amp;volvo">
+      <change afterPath="$PROJECT_DIR$/Test/AnyCarWorkshopTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Test/VolvoWorkshopTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/AnyCarWorkshop.java" beforeDir="false" afterPath="$PROJECT_DIR$/AnyCarWorkshop.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/AnyCarWorkshop1.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Cartransporter.java" beforeDir="false" afterPath="$PROJECT_DIR$/Cartransporter.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Scania.java" beforeDir="false" afterPath="$PROJECT_DIR$/Scania.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Test/CartransporterTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/Test/CartransporterTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/VolvoWorkshop1.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/iCarWorkshop1.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/iTruckBed.java" beforeDir="false" />
+    </list>
+    <list id="8d733c31-2e0f-48ff-83c2-fba71edce175" name="Changes by Damkilde" comment="Changes by Damkilde">
+      <change beforePath="$PROJECT_DIR$/VolvoWorkshop.java" beforeDir="false" afterPath="$PROJECT_DIR$/VolvoWorkshop.java" afterDir="false" />
     </list>
+    <list id="f4710a53-38fd-43b2-965e-276937e07abe" name="Changes by johanbrynne" comment="" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
-  <component name="CoverageOptionsProvider">
-    <option name="myAddOrReplace" value="0" />
-  </component>
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
+        <option value="Enum" />
+        <option value="Class" />
+        <option value="Interface" />
         <option value="JUnit5 Test Class" />
       </list>
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="PREVIOUS_COMMIT_AUTHORS">
+      <list>
+        <option value="Damkilde &lt;oskardamkilde@gmail.com&gt;" />
+      </list>
+    </option>
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="Lab2" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="GitHubPullRequestSearchHistory">{
-  &quot;lastFilter&quot;: {
-  }
-}</component>
-  <component name="GithubPullRequestsUISettings">
-    <option name="selectedUrlAndAccountId">
-      <UrlAndAccount>
-        <option name="accountId" value="6ba6584d-698f-43db-b3b0-ce2d4216ea5e" />
-        <option name="url" value="https://github.com/Daskaromkilde/lab1.git" />
-      </UrlAndAccount>
-    </option>
+  <component name="HighlightingSettingsPerFile">
+    <setting file="file://$PROJECT_DIR$/Volvo240.java" root0="FORCE_HIGHLIGHTING" />
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
+  <component name="ProblemsViewState">
+    <option name="selectedTabId" value="CurrentFile" />
+  </component>
   <component name="ProjectColorInfo">{
-  &quot;associatedIndex&quot;: 3
+  &quot;associatedIndex&quot;: 1
 }</component>
-  <component name="ProjectId" id="2bH0nbr9fsXPYoib3RMpiv68WVl" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
-    <ConfirmationsSetting value="2" id="Add" />
-  </component>
+  <component name="ProjectId" id="2b7ySIsbddostrNgLr13GvNywZ1" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Downloaded.Files.Path.Enabled": "false",
-    "JUnit.CarTest.executor": "Coverage",
-    "Repository.Attach.Annotations": "false",
-    "Repository.Attach.JavaDocs": "false",
-    "Repository.Attach.Sources": "false",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
-    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
-    "git-widget-placeholder": "master",
-    "ignore.virus.scanning.warn.message": "true",
-    "jdk.selected.JAVA_MODULE": "corretto-17",
-    "kotlin-language-version-configured": "true",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "project.structure.last.edited": "Libraries",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.2",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
+    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
+    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
+    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;codeWithMe.voiceChat.enabledByDefault&quot;: &quot;false&quot;,
+    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,
+    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;Lab1&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/46725/IdeaProjects/lab1&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;CodeWithMe&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Users\46725\IdeaProjects\lab1" />
+    </key>
     <key name="CreateTestDialog.Recents.Supers">
       <recent name="" />
     </key>
     <key name="CreateTestDialog.RecentsKey">
       <recent name="" />
     </key>
-  </component>
-  <component name="RunManager">
-    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
-      <module name="labb1" />
-      <option name="INTERPRETER_OPTIONS" value="" />
-      <option name="PARENT_ENVS" value="true" />
-      <envs>
-        <env name="PYTHONUNBUFFERED" value="1" />
-      </envs>
-      <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="" />
-      <option name="IS_MODULE_SDK" value="false" />
-      <option name="ADD_CONTENT_ROOTS" value="true" />
-      <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="SCRIPT_NAME" value="" />
-      <option name="PARAMETERS" value="" />
-      <option name="SHOW_COMMAND_LINE" value="false" />
-      <option name="EMULATE_TERMINAL" value="false" />
-      <option name="MODULE_MODE" value="false" />
-      <option name="REDIRECT_INPUT" value="false" />
-      <option name="INPUT_FILE" value="" />
-      <method v="2" />
-    </configuration>
-    <configuration default="true" type="Tox" factoryName="Tox">
-      <module name="labb1" />
-      <option name="INTERPRETER_OPTIONS" value="" />
-      <option name="PARENT_ENVS" value="true" />
-      <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="" />
-      <option name="IS_MODULE_SDK" value="false" />
-      <option name="ADD_CONTENT_ROOTS" value="true" />
-      <option name="ADD_SOURCE_ROOTS" value="true" />
-      <method v="2" />
-    </configuration>
-  </component>
-  <component name="SharedIndexes">
-    <attachedChunks>
-      <set>
-        <option value="jdk-21.0.1-corretto-21.0.1-f644763e9732-eed86825" />
-      </set>
-    </attachedChunks>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
-      <changelist id="927e760e-ee34-431f-8247-380566780540" name="Changes" comment="" />
-      <created>1705856865194</created>
+      <changelist id="4e3097a4-7052-494d-8302-f41f496d44d7" name="Changes" comment="" />
+      <created>1705580410242</created>
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
-      <updated>1705856865194</updated>
-      <workItem from="1706024595882" duration="15000" />
-      <workItem from="1706024614460" duration="1480000" />
+      <updated>1705580410242</updated>
+      <workItem from="1705580412049" duration="11877000" />
+      <workItem from="1705668740557" duration="23000" />
+      <workItem from="1706014526111" duration="586000" />
+      <workItem from="1706015220754" duration="31000" />
+      <workItem from="1706016229580" duration="817000" />
+      <workItem from="1706102805419" duration="4266000" />
+      <workItem from="1706185921359" duration="7854000" />
+      <workItem from="1706259463506" duration="365000" />
+      <workItem from="1706278091791" duration="2512000" />
+    </task>
+    <task id="LOCAL−00001" summary="Skapat car class. Extendat saab&amp;volvo">
+      <option name="closed" value="true" />
+      <created>1706014574094</created>
+      <option name="number" value="LOCAL−00001" />
+      <option name="presentableId" value="LOCAL−00001" />
+      <updated>1706014574094</updated>
+    </task>
+    <task id="LOCAL−00002" summary="Skapat car class. Extendat saab&amp;volvo">
+      <option name="closed" value="true" />
+      <created>1706015004387</created>
+      <option name="number" value="LOCAL−00002" />
+      <option name="presentableId" value="LOCAL−00002" />
+      <updated>1706015004387</updated>
     </task>
+    <task id="LOCAL−00003" summary="Skapat car class. Extendat saab&amp;volvo">
+      <option name="closed" value="true" />
+      <created>1706015016045</created>
+      <option name="number" value="LOCAL−00003" />
+      <option name="presentableId" value="LOCAL−00003" />
+      <updated>1706015016045</updated>
+    </task>
+    <task id="LOCAL−00004" summary="Skapat car class. Extendat saab&amp;volvo">
+      <option name="closed" value="true" />
+      <created>1706018634684</created>
+      <option name="number" value="LOCAL−00004" />
+      <option name="presentableId" value="LOCAL−00004" />
+      <updated>1706018634684</updated>
+    </task>
+    <task id="LOCAL−00005" summary="Skapat car class. Extendat saab&amp;volvo">
+      <option name="closed" value="true" />
+      <created>1706018734493</created>
+      <option name="number" value="LOCAL−00005" />
+      <option name="presentableId" value="LOCAL−00005" />
+      <updated>1706018734493</updated>
+    </task>
+    <task id="LOCAL−00006" summary="Skapat car class. Extendat saab&amp;volvo">
+      <option name="closed" value="true" />
+      <created>1706108781414</created>
+      <option name="number" value="LOCAL−00006" />
+      <option name="presentableId" value="LOCAL−00006" />
+      <updated>1706108781414</updated>
+    </task>
+    <task id="LOCAL−00007" summary="Changes by Damkilde">
+      <option name="closed" value="true" />
+      <created>1706108786461</created>
+      <option name="number" value="LOCAL−00007" />
+      <option name="presentableId" value="LOCAL−00007" />
+      <updated>1706108786462</updated>
+    </task>
+    <task id="LOCAL−00008" summary="Skapat car class. Extendat saab&amp;volvo">
+      <option name="closed" value="true" />
+      <created>1706109578336</created>
+      <option name="number" value="LOCAL−00008" />
+      <option name="presentableId" value="LOCAL−00008" />
+      <updated>1706109578336</updated>
+    </task>
+    <task id="LOCAL−00009" summary="Skapat car class. Extendat saab&amp;volvo">
+      <option name="closed" value="true" />
+      <created>1706192176517</created>
+      <option name="number" value="LOCAL−00009" />
+      <option name="presentableId" value="LOCAL−00009" />
+      <updated>1706192176517</updated>
+    </task>
+    <task id="LOCAL−00010" summary="Changes by Damkilde">
+      <option name="closed" value="true" />
+      <created>1706192181512</created>
+      <option name="number" value="LOCAL−00010" />
+      <option name="presentableId" value="LOCAL−00010" />
+      <updated>1706192181512</updated>
+    </task>
+    <task id="LOCAL−00011" summary="Changes by johanbrynne">
+      <option name="closed" value="true" />
+      <created>1706192186356</created>
+      <option name="number" value="LOCAL−00011" />
+      <option name="presentableId" value="LOCAL−00011" />
+      <updated>1706192186356</updated>
+    </task>
+    <task id="LOCAL−00012" summary="Skapat car class. Extendat saab&amp;volvo">
+      <option name="closed" value="true" />
+      <created>1706193756932</created>
+      <option name="number" value="LOCAL−00012" />
+      <option name="presentableId" value="LOCAL−00012" />
+      <updated>1706193756932</updated>
+    </task>
+    <task id="LOCAL−00013" summary="Changes by Damkilde">
+      <option name="closed" value="true" />
+      <created>1706193760774</created>
+      <option name="number" value="LOCAL−00013" />
+      <option name="presentableId" value="LOCAL−00013" />
+      <updated>1706193760774</updated>
+    </task>
+    <task id="LOCAL−00014" summary="Changes by johanbrynne">
+      <option name="closed" value="true" />
+      <created>1706193764170</created>
+      <option name="number" value="LOCAL−00014" />
+      <option name="presentableId" value="LOCAL−00014" />
+      <updated>1706193764170</updated>
+    </task>
+    <task id="LOCAL−00015" summary="Skapat car class. Extendat saab&amp;volvo">
+      <option name="closed" value="true" />
+      <created>1706193769855</created>
+      <option name="number" value="LOCAL−00015" />
+      <option name="presentableId" value="LOCAL−00015" />
+      <updated>1706193769855</updated>
+    </task>
+    <option name="localTasksCounter" value="16" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="new push v1" />
+    <MESSAGE value="Scania ok &amp; 1 test case" />
+    <MESSAGE value="Changes by Damkilde" />
+    <MESSAGE value="Changes by johanbrynne" />
+    <MESSAGE value="Skapat car class. Extendat saab&amp;volvo" />
+    <option name="LAST_COMMIT_MESSAGE" value="Skapat car class. Extendat saab&amp;volvo" />
+  </component>
+  <component name="XSLT-Support.FileAssociations.UIState">
+    <expand />
+    <select />
+  </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/labb1$CarTest.ic" NAME="CarTest Coverage Results" MODIFIED="1706025652608" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/lab1$CarTest.ic" NAME="CarTest Coverage Results" MODIFIED="1706108905351" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+    <SUITE FILE_PATH="coverage/lab1$CartransporterTest.ic" NAME="CartransporterTest Coverage Results" MODIFIED="1706192343875" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
   </component>
 </project>
\ No newline at end of file
